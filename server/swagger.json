{
  "swagger": "2.0",
  "info": {
    "description": "This is the server for SendIT, my Andela bootcamp project.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key `special-key` to test the authorization     filters.",
    "version": "1.0.0",
    "title": "SendIT",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "idiakosesunday@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "ispoa-sendit.herokuapp.com",
  "basePath": "/api",
  "schemes": [
    "http"
  ],
  "paths": {
    "/auth/signup": {
      "post": {
        "tags": [
          "users"
        ],
        "description": "route to sign up as a user",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "user",
            "description": "The user to log be created.",
            "schema": {
              "type": "object",
              "required": [
                "firstname, lastname, email, password"
              ],
              "properties": {
                "firstname": {
                  "type": "string"
                },
                "lastname": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User signed up successfully",
            "schema": {
              "$ref": "#/definitions/UserToken"
            }
          },
          "422": {
            "description": "Email address supplied already in use"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Login as a user",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "user",
            "description": "The user to log in as.",
            "schema": {
              "type": "object",
              "required": [
                "email, password"
              ],
              "properties": {
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User signed up successfully"
          },
          "401": {
            "description": "Invalid credentials"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/parcels/:id": {
      "get": {
        "tags": [
          "parcels"
        ],
        "summary": "get particular parcel",
        "description": "get particular parcel",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Fetched parcel successfully",
            "schema": {
              "$ref": "#/definitions/Parcel"
            }
          },
          "400": {
            "description": "Error occured"
          },
          "401": {
            "description": "Not authorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/parcels": {
      "get": {
        "tags": [
          "parcels"
        ],
        "summary": "get all parcels",
        "description": "get all parcels",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Fetched parcels successfully",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Parcel"
              }
            }
          },
          "400": {
            "description": "Error Occured"
          },
          "401": {
            "description": "Not authorized for admin access"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/users/:id/parcels": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "get all parcels of a user",
        "description": "get all user parcels",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Fetched parcel successfully",
            "schema": {
              "$ref": "#/definitions/Parcel"
            }
          },
          "400": {
            "description": "Error occured"
          },
          "401": {
            "description": "Not authorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/parcels/:id/cancel": {
      "put": {
        "tags": [
          "parcels"
        ],
        "summary": "Cancel a parcel delivery order",
        "description": "Cancel a parcel delivery order",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Parcel"
            }
          },
          "400": {
            "description": "Parcel doesnt exist",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          },
          "403": {
            "description": "Not allowed access to resource",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/parcels/:id/destination": {
      "put": {
        "tags": [
          "parcels"
        ],
        "summary": "Update a parcel delivery order destination",
        "description": "Update a parcel delivery order destination",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Parcel"
            }
          },
          "400": {
            "description": "Parcel doesnt exist",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          },
          "403": {
            "description": "Not allowed access to resource",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/parcels/:id/status": {
      "put": {
        "tags": [
          "parcels"
        ],
        "summary": "Update a parcel delivery order status",
        "description": "Update a parcel delivery order status - Admin Only",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Parcel"
            }
          },
          "400": {
            "description": "Parcel doesnt exist",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          },
          "403": {
            "description": "Not allowed access to resource",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/parcels/:id/presentLocation": {
      "put": {
        "tags": [
          "parcels"
        ],
        "summary": "Update a parcel delivery order presentLocation",
        "description": "Update a parcel delivery order presentLocation - Admin Only",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Parcel"
            }
          },
          "400": {
            "description": "Parcel doesnt exist",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          },
          "403": {
            "description": "Not allowed access to resource",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/parcels/": {
      "post": {
        "tags": [
          "parcels"
        ],
        "summary": "Create a parcel delivery order status",
        "description": "Create a parcel delivery order status",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Parcel"
            }
          },
          "400": {
            "description": "Parcel doesnt exist",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          },
          "403": {
            "description": "Not allowed access to resource",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    }
  },
  "securityDefinitions": {
    "bearerAuth": {
      "type": "apiKey",
      "in": "header",
      "name": "Authorization"
    }
  },
  "definitions": {
    "Parcel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "userId": {
          "type": "string",
          "format": "uuid"
        },
        "destination": {
          "type": "string"
        },
        "pickUpLocation": {
          "type": "string"
        },
        "presentLocation": {
          "type": "string"
        },
        "status": {
          "type": "integer",
          "description": "PArcel Delivery Order Status",
          "enum": [
            0,
            1,
            2,
            3,
            4
          ]
        }
      }
    },
    "UserToken": {
      "type": "object",
      "properties": {
        "auth": {
          "type": "boolean"
        },
        "token": {
          "type": "string"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "ApiResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "error": {
          "type": "string"
        }
      }
    }
  }
}